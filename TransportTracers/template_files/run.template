#!/bin/bash

#SBATCH -c 24
#SBATCH -N 1
#SBATCH -t 0-12:00
#SBATCH -p sapphire,huce_cascade,seas_compute,shared
#SBATCH --mem=4000
#SBATCH --mail-type=END

#------------------------------------------------------------------------------
#                  GEOS-Chem Global Chemical Transport Model                  !
#------------------------------------------------------------------------------
#BOP
#
# !IROUTINE: {VERSTR}.{CDATE}
#
# !DESCRIPTION: Submits a 1-yr Transport Tracers benchmark simulation
#  and sends output to the "Logs" directory.
#\\
#\\
# !CALLING SEQUENCE:
#  To submit run to the SLURM queue system:
#   sbatch {VERSTR}.{CDATE}
#
#  To run interactively
#   ./{VERSTR}.{CDATE}
#
# !REVISION HISTORY:
#  24 Mar 2015 - M. Sulprizio- Initial version
#EOP
#------------------------------------------------------------------------------
#BOC

# Set the proper # of threads for OpenMP
# SLURM_CPUS_PER_TASK ensures this matches the number you set with -c above
export OMP_NUM_THREADS=${SLURM_CPUS_PER_TASK}

# Default mask
umask 022

# Set run number
YEAR1={STYEAR}
YEAR2=$((YEAR1 + 1))

# Set version
VER="{VERSTR}"

# Set the run index
RUN="{RUNSTR}"

# Set dates and times
DATE1="${YEAR1}0101"
DATE2="${YEAR2}0101"
TIME1="000000"
TIME2="000000"

# Change directory
cd ..

# Source the GNU10 environment file
source "./runScriptSamples/operational_examples/harvard_cannon/gcclassic.gcc10_cannon_rocky.env"

# Set input file
YML="./Config/geoschem_config.yml.template"

# Set restart file
RES="./Restarts/GEOSChem.Restart.${DATE1}_0000z.nc4"

# Set log file name
LOG="./Logs/log.${DATE1}"

# Create input file
if [[ -f ${YML} ]]; then
    # Replace date and time tokens in geoschem_config.yml.template
    cp ${YML} tmp.yml
    sed -i -e "s/{DATE1}/${DATE1}/g" tmp.yml
    sed -i -e "s/{DATE2}/${DATE2}/g" tmp.yml
    sed -i -e "s/{VERSION}/${VER}/g" tmp.yml
    mv tmp.yml ./geoschem_config.yml
else
    echo "Could not find GEOS-Chem config file: $INP"
    exit 1
fi

# Compile the code before starting the initial run
if [[ "x${RUN}" == "x01" ]]; then
    cd build
    cmake ../CodeDir -DRUNDIR=..
    make -j
    make -j install
    cd ..
    if [[ ! -f ./gcclassic ]]; then
        echo "Compilation error occurred. Could not start run."
        exit 1
    fi
fi

# Run the code
if [[ -f ${RES} ]]; then
    srun -c ${SLURM_CPUS_PER_TASK} ./gcclassic >> ${LOG}
else
    echo "Could not find restart file: $RES"
    exit 1
fi

# Archive HEMCO.log and geoschem_config.yml files
mv -v geoschem_config.yml ./Config/geoschem_config.yml.${DATE1}

# Exit normally
exit 0

#EOC
